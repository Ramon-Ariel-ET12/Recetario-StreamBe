// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace infraestructure.Persistence.Migrations
{
    [DbContext(typeof(RecetarioDbContext))]
    [Migration("20241111002018_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("core.Entities.Imagen", b =>
                {
                    b.Property<Guid>("IdImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("Datos")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Formato")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("RecetaIdReceta")
                        .HasColumnType("uuid");

                    b.HasKey("IdImagen");

                    b.HasIndex("RecetaIdReceta");

                    b.ToTable("Imagen");
                });

            modelBuilder.Entity("core.Entities.Ingrediente", b =>
                {
                    b.Property<Guid>("IdIngrediente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<float>("Cantidad")
                        .HasColumnType("real");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("RecetaIdReceta")
                        .HasColumnType("uuid");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdIngrediente");

                    b.HasIndex("RecetaIdReceta");

                    b.ToTable("Ingrediente");
                });

            modelBuilder.Entity("core.Entities.Instruccion", b =>
                {
                    b.Property<Guid>("IdIntruccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Explicacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Paso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("RecetaIdReceta")
                        .HasColumnType("uuid");

                    b.HasKey("IdIntruccion");

                    b.HasIndex("RecetaIdReceta");

                    b.ToTable("Instruccion");
                });

            modelBuilder.Entity("core.Entities.Receta", b =>
                {
                    b.Property<Guid>("IdReceta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdReceta");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Receta");
                });

            modelBuilder.Entity("core.Entities.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("core.Entities.Imagen", b =>
                {
                    b.HasOne("core.Entities.Receta", null)
                        .WithMany("Imagen")
                        .HasForeignKey("RecetaIdReceta")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("core.Entities.Ingrediente", b =>
                {
                    b.HasOne("core.Entities.Receta", null)
                        .WithMany("Ingrediente")
                        .HasForeignKey("RecetaIdReceta")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("core.Entities.Instruccion", b =>
                {
                    b.HasOne("core.Entities.Receta", null)
                        .WithMany("Instruccion")
                        .HasForeignKey("RecetaIdReceta")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("core.Entities.Receta", b =>
                {
                    b.HasOne("core.Entities.Usuario", "Usuario")
                        .WithMany("Receta")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("core.Entities.Receta", b =>
                {
                    b.Navigation("Imagen");

                    b.Navigation("Ingrediente");

                    b.Navigation("Instruccion");
                });

            modelBuilder.Entity("core.Entities.Usuario", b =>
                {
                    b.Navigation("Receta");
                });
#pragma warning restore 612, 618
        }
    }
}
